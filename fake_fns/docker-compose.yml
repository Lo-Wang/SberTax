version: '3.8'

networks:
  my_network:
    external: true # Используем существующую сеть

services:
  postgres:
    image: postgres:latest
    container_name: postgre_fast_api
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: my_super_password
      POSTGRES_DB: fake_fns
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5434:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d fake_fns" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      - my_network # Подключаем к сети

  fake_fns:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 7000 --reload"
    ports:
      - "7000:7000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://admin:my_super_password@postgre_fast_api:5432/fake_fns
    networks:
      - my_network # Подключаем к сети

volumes:
  pgdata:
    driver: local